@mixin theme-light() {
    color-scheme: light;

    --color-primary: #c43162;
    --color-primary-alt: var(--color-primary);
    --color-secondary: #4f9c86;
    --color-base: #61193e;
    --color-background: #fffafa;
}

@mixin theme-dark() {
    color-scheme: dark;

    --color-primary: #cf4f79;
    --color-primary-alt: var(--color-primary);
    --color-secondary: #54b096;
    --color-base: #d6ccce;
    --color-background: #1d0612;
}

// @mixin theme-high-contrast() {
//     --color-primary: #cf4f79;
//     --color-primary-alt: var(--color-primary);
//     --color-secondary: #54b096;
//     --color-base: #d6ccce;
//     --color-background: black;
// }

:root {
    --font-family-base: Verdana, Geneva, Tahoma, sans-serif;
    --font-family-alt: Georgia, "Times New Roman", Times, serif;
    --font-family-mono: "Courier New", Courier, monospace;

    --font-size-smaller: 0.69rem;
    --font-size-small: 0.83rem;
    --font-size-base: 1rem;
    --font-size-large: 1.2rem;
    --font-size-larger: 1.32rem;
    --font-size-largest: 1.44rem;

    --line-height-small: 1.25rem;
    --line-height-base: 1.5rem;
    --line-height-large: 1.8rem;
    --line-height-larger: 1.98rem;
    --line-height-largest: 2.16rem;

    --letter-spacing-100: initial;
    --letter-spacing-110: 0.05rem;
    --letter-spacing-120: 0.07rem;
    --letter-spacing-130: 0.09rem;
    --letter-spacing-140: 0.12rem;

    // for margin's, padding, gap, etc.
    --spacing-025: 0.58rem;
    --spacing-050: 0.69rem;
    --spacing-075: 0.83rem;
    --spacing-100: 1rem;
    --spacing-125: 1.2rem;
    --spacing-150: 1.44rem;
    --spacing-175: 1.73rem;
    --spacing-200: 2rem;

    // maximum width that text should span
    --measure-max: 67rem;
}

// ---- THEME OVERRIDES ---- //

// from: https://www.aleksandrhovhannisyan.com/blog/the-perfect-theme-switch/
:root,
:root[data-theme="light"] {
    @include theme-light();
}

:root[data-theme="dark"] {
    @include theme-dark();
}

@media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
        @include theme-dark();
    }
}

// TODO
// :root[data-theme="high-contrast"] {
//     --color-primary: #cf4f79;
//     --color-primary-alt: var(--color-primary);
//     --color-secondary: #54b096;
//     --color-base: black;
//     --color-background: white;
// }

// @media (prefers-contrast: more) {
//     :root:not([data-theme]) {
//         @include theme-high-contrast();
//     }
// }

/*:._.:*~  GLOBAL RESETS  ~*:._.:*
 *
 * global reset taken from here: 
 * https://www.joshwcomeau.com/css/custom-css-reset/
 * 
 */

/* less shitty box-sizing (border-based instead of mixins-based) */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* reset layout defaults */
* {
    margin: 0;
    padding: 0;

    // use the default scrollbar width for the platform, if applicable
    scrollbar-width: auto;

    // set root font size; all rem relative to this
    font-size: 14px;
}

/* improve media defaults */
img,
picture,
video,
canvas,
svg {
    display: block;

    max-width: 100%;

    image-rendering: optimizeSpeed; /* STOP SMOOTHING, GIVE ME SPEED  */
    image-rendering: -moz-crisp-edges; /* Firefox                        */
    image-rendering: -o-crisp-edges; /* Opera                          */
    image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
    image-rendering: pixelated; /* Universal support since 2021   */
    image-rendering: optimize-contrast; /* CSS3 Proposed                  */
}

/* remove form typography styles */
input,
button,
textarea,
select {
    font: inherit;
}

/* avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* create a root stacking context */
#root,
#__next {
    isolation: isolate;
}

/* *~ my resets ~* */

html {
    background-color: var(--color-background);
}

/* links */
a {
    text-decoration-style: dotted;
}

a[rel*="external"]::after {
    content: "↗";
}

a:link {
    color: var(--color-primary);
}

a:visited {
    color: var(--color-primary-alt);
}

a:hover {
    color: var(--color-secondary);
}

/* highlight */
::-moz-selection {
    /* Code for Firefox */
    color: var(--color-background);
    background: var(--color-secondary);
}

::selection {
    color: var(--color-background);
    background: var(--color-secondary);
}

/* other */
abbr {
    font: inherit;
    text-decoration: none;
}

// -- reusable styles -- //
@mixin layout-border {
    border: 1px solid var(--color-base);
}

@mixin layout-padding {
    padding: var(--spacing-100);
}

@mixin button-on-hover {
    &:hover {
        border-color: var(--color-background);

        color: var(--color-background);
        background-color: var(--color-secondary);
    }
}

@mixin emphasis-serif {
    i,
    em {
        @include text-style(serif, italic);
        letter-spacing: var(--letter-spacing-110);
    }
}

@mixin text-style($family, $style: normal, $weight: normal) {
    color: var(--color-base);
    font-style: $style;
    font-weight: $weight;

    @if $family == sans {
        font-family: var(--font-family-base);
    } @else if $family == serif {
        font-family: var(--font-family-alt);
    } @else if $family == mono {
        font-family: var(--font-family-mono);
    }
}

@mixin text-size($size) {
    @if $size == smaller {
        font-size: var(--font-size-smaller);
        line-height: var(--line-height-smaller);
    } @else if $size == small {
        font-size: var(--font-size-small);
        line-height: var(--line-height-small);
    } @else if $size == base {
        font-size: var(--font-size-base);
        line-height: var(--line-height-base);
    } @else if $size == large {
        font-size: var(--font-size-large);
        line-height: var(--line-height-large);
    } @else if $size == larger {
        font-size: var(--font-size-larger);
        line-height: var(--line-height-larger);
    } @else if $size == largest {
        font-size: var(--font-size-largest);
        line-height: var(--line-height-largest);
    }
}

@mixin list-margin {
    margin-left: var(--spacing-175);
}

@mixin list-style($style) {
    @if $style == base {
        list-style: "❀ ";
    } @else if $style == navi {
        list-style: "∟ ";
    }
}

//:._.:*~  BREAKPOINTS ~*:._.://

@mixin for-viewport-size($size) {
    @if $size == phone {
        @media screen and (max-width: 800px) {
            @content;
        }
    } @else if $size == desktop {
        @media screen and (min-width: 801px) {
            @content;
        }
    }
}

@mixin for-frame-size($size) {
    @if $size == small {
        @media (max-width: 599px) {
            @content;
        }
    } @else if $size == large {
        @media (min-width: 600px) {
            @content;
        }
    }
}

// when user happens to be inside the main content frame (i.e. they
// clicked "show only this frame", etc. lol)
// only really accounts for desktop, but idek how you'd enter the frame
// on mobile lmao so ¯\_(ツ)_/¯
@mixin for-in-frame() {
    @media screen and (min-width: 750px) {
        @content;
    }
}

//:._.:*~ LAYOUT BLOCKS ~*:._.://

.l-imposter {
    @include for-viewport-size(phone) {
        display: flex;
        justify-content: center;
    }

    @include for-viewport-size(desktop) {
        display: flex;
        position: absolute;

        top: 0;
        right: 0;
        bottom: 0;
        left: 0;

        // center horizontally and vertically
        justify-content: center;
        align-items: center;
        // flex-grow: 0;
        // flex-shrink: 0;
    }
}

// .l-sidebar {
// }

.l-stack {
    display: flex;

    flex-direction: column;
    row-gap: var(--spacing-100);

    &_horizontal {
        @include for-frame-size(large) {
            flex-direction: row;
            column-gap: var(--spacing-100);
        }
    }
}

.l-center {
    display: flex;

    justify-content: center;
}
